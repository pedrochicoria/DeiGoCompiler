Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: /* empty */
    3             | DeclarationsAux

    4 DeclarationsAux: DeclarationsAux VarDeclaration SEMICOLON
    5                | DeclarationsAux FuncDeclaration SEMICOLON
    6                | VarDeclaration SEMICOLON
    7                | FuncDeclaration SEMICOLON

    8 VarDeclaration: VAR VarSpec
    9               | VAR LPAR VarSpec SEMICOLON RPAR

   10 VarSpec: ID Type
   11        | ID VarSpecAux Type

   12 VarSpecAux: VarSpecAux COMMA ID
   13           | COMMA ID

   14 Type: INT
   15     | FLOAT32
   16     | BOOL
   17     | STRING

   18 FuncDeclaration: FUNC ID LPAR RPAR FuncBody
   19                | FUNC ID LPAR Parameters RPAR Type FuncBody
   20                | FUNC ID LPAR Parameters RPAR FuncBody
   21                | FUNC ID LPAR RPAR Type FuncBody

   22 Parameters: ParametersAux

   23 ParametersAux: ParametersAux COMMA ID Type
   24              | ID Type

   25 FuncBody: LBRACE VarsAndStatements RBRACE

   26 VarsAndStatements: VarsAndStatements SEMICOLON
   27                  | VarsAndStatements VarDeclaration SEMICOLON
   28                  | VarsAndStatements Statement SEMICOLON
   29                  | /* empty */

   30 Statement: ID ASSIGN Expr
   31          | LBRACE RBRACE
   32          | LBRACE StatementSEMICOLON RBRACE
   33          | IF Expr LBRACE RBRACE
   34          | IF Expr LBRACE StatementSEMICOLON RBRACE
   35          | IF Expr LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   39          | FOR LBRACE RBRACE
   40          | FOR Expr LBRACE RBRACE
   41          | FOR Expr LBRACE StatementSEMICOLON RBRACE
   42          | FOR LBRACE StatementSEMICOLON RBRACE
   43          | RETURN
   44          | RETURN Expr
   45          | FuncInvocation
   46          | ParseArgs
   47          | PRINT LPAR StatementExprSTRLIT RPAR
   48          | error

   49 StatementSEMICOLON: StatementSEMICOLON Statement SEMICOLON
   50                   | Statement SEMICOLON

   51 StatementExprSTRLIT: Expr
   52                    | STRLIT

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   55 FuncInvocation: ID LPAR error RPAR
   56               | ID LPAR RPAR
   57               | ID LPAR Expr RPAR
   58               | ID LPAR Expr FuncInvocationAux RPAR

   59 FuncInvocationAux: FuncInvocationAux COMMA Expr
   60                  | COMMA Expr

   61 Expr: INTLIT
   62     | REALLIT
   63     | ID
   64     | FuncInvocation
   65     | LPAR Expr RPAR
   66     | NOT Expr
   67     | MINUS Expr
   68     | PLUS Expr
   69     | Expr OR Expr
   70     | Expr AND Expr
   71     | Expr LT Expr
   72     | Expr GT Expr
   73     | Expr EQ Expr
   74     | Expr NE Expr
   75     | Expr LE Expr
   76     | Expr GE Expr
   77     | Expr PLUS Expr
   78     | Expr MINUS Expr
   79     | Expr STAR Expr
   80     | Expr DIV Expr
   81     | Expr MOD Expr
   82     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 48 54 55 82
SEMICOLON (258) 1 4 5 6 7 9 26 27 28 49 50
BLANKID (259) 53 54
PACKAGE (260) 1
RETURN (261) 43 44
AND (262) 70
ASSIGN (263) 30 53 54
STAR (264) 79
COMMA (265) 12 13 23 53 54 59 60
DIV (266) 80
EQ (267) 73
GE (268) 76
GT (269) 72
LBRACE (270) 25 31 32 33 34 35 36 37 38 39 40 41 42
LE (271) 75
LPAR (272) 9 18 19 20 21 47 53 54 55 56 57 58 65 82
LSQ (273) 53
LT (274) 71
MINUS (275) 67 78
MOD (276) 81
NE (277) 74
NOT (278) 66
OR (279) 69
PLUS (280) 68 77
RBRACE (281) 25 31 32 33 34 35 36 37 38 39 40 41 42
RPAR (282) 9 18 19 20 21 47 53 54 55 56 57 58 65 82
RSQ (283) 53
ELSE (284) 35 36 37 38
FOR (285) 39 40 41 42
IF (286) 33 34 35 36 37 38
VAR (287) 8 9
INT (288) 14
FLOAT32 (289) 15
BOOL (290) 16
STRING (291) 17
PARSEINT (292) 53 54
FUNC (293) 18 19 20 21
CMDARGS (294) 53
PRINT (295) 47
RESERVED (296)
INTLIT (297) 61
REALLIT (298) 62
STRLIT (299) 52
ID (300) 1 10 11 12 13 18 19 20 21 23 24 30 53 54 55 56 57 58 63


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Declarations (48)
    on left: 2 3, on right: 1
DeclarationsAux (49)
    on left: 4 5 6 7, on right: 3 4 5
VarDeclaration (50)
    on left: 8 9, on right: 4 6 27
VarSpec (51)
    on left: 10 11, on right: 8 9
VarSpecAux (52)
    on left: 12 13, on right: 11 12
Type (53)
    on left: 14 15 16 17, on right: 10 11 19 21 23 24
FuncDeclaration (54)
    on left: 18 19 20 21, on right: 5 7
Parameters (55)
    on left: 22, on right: 19 20
ParametersAux (56)
    on left: 23 24, on right: 22 23
FuncBody (57)
    on left: 25, on right: 18 19 20 21
VarsAndStatements (58)
    on left: 26 27 28 29, on right: 25 26 27 28
Statement (59)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48, on right: 28 49 50
StatementSEMICOLON (60)
    on left: 49 50, on right: 32 34 36 37 38 41 42 49
StatementExprSTRLIT (61)
    on left: 51 52, on right: 47
ParseArgs (62)
    on left: 53 54, on right: 46
FuncInvocation (63)
    on left: 55 56 57 58, on right: 45 64
FuncInvocationAux (64)
    on left: 59 60, on right: 58 59
Expr (65)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82, on right: 30 33 34 35 36 37 38 40 41 44 51 53 57 58
    59 60 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81


state 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 2 (Declarations)

    Declarations     go to state 8
    DeclarationsAux  go to state 9
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


state 6

    8 VarDeclaration: VAR . VarSpec
    9               | VAR . LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 12
    ID    shift, and go to state 13

    VarSpec  go to state 14


state 7

   18 FuncDeclaration: FUNC . ID LPAR RPAR FuncBody
   19                | FUNC . ID LPAR Parameters RPAR Type FuncBody
   20                | FUNC . ID LPAR Parameters RPAR FuncBody
   21                | FUNC . ID LPAR RPAR Type FuncBody

    ID  shift, and go to state 15


state 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


state 9

    3 Declarations: DeclarationsAux .
    4 DeclarationsAux: DeclarationsAux . VarDeclaration SEMICOLON
    5                | DeclarationsAux . FuncDeclaration SEMICOLON

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    VarDeclaration   go to state 16
    FuncDeclaration  go to state 17


state 10

    6 DeclarationsAux: VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


state 11

    7 DeclarationsAux: FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 19


state 12

    9 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 13

    VarSpec  go to state 20


state 13

   10 VarSpec: ID . Type
   11        | ID . VarSpecAux Type

    COMMA    shift, and go to state 21
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    VarSpecAux  go to state 26
    Type        go to state 27


state 14

    8 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 8 (VarDeclaration)


state 15

   18 FuncDeclaration: FUNC ID . LPAR RPAR FuncBody
   19                | FUNC ID . LPAR Parameters RPAR Type FuncBody
   20                | FUNC ID . LPAR Parameters RPAR FuncBody
   21                | FUNC ID . LPAR RPAR Type FuncBody

    LPAR  shift, and go to state 28


state 16

    4 DeclarationsAux: DeclarationsAux VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 29


state 17

    5 DeclarationsAux: DeclarationsAux FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 30


state 18

    6 DeclarationsAux: VarDeclaration SEMICOLON .

    $default  reduce using rule 6 (DeclarationsAux)


state 19

    7 DeclarationsAux: FuncDeclaration SEMICOLON .

    $default  reduce using rule 7 (DeclarationsAux)


state 20

    9 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 31


state 21

   13 VarSpecAux: COMMA . ID

    ID  shift, and go to state 32


state 22

   14 Type: INT .

    $default  reduce using rule 14 (Type)


state 23

   15 Type: FLOAT32 .

    $default  reduce using rule 15 (Type)


state 24

   16 Type: BOOL .

    $default  reduce using rule 16 (Type)


state 25

   17 Type: STRING .

    $default  reduce using rule 17 (Type)


state 26

   11 VarSpec: ID VarSpecAux . Type
   12 VarSpecAux: VarSpecAux . COMMA ID

    COMMA    shift, and go to state 33
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    Type  go to state 34


state 27

   10 VarSpec: ID Type .

    $default  reduce using rule 10 (VarSpec)


state 28

   18 FuncDeclaration: FUNC ID LPAR . RPAR FuncBody
   19                | FUNC ID LPAR . Parameters RPAR Type FuncBody
   20                | FUNC ID LPAR . Parameters RPAR FuncBody
   21                | FUNC ID LPAR . RPAR Type FuncBody

    RPAR  shift, and go to state 35
    ID    shift, and go to state 36

    Parameters     go to state 37
    ParametersAux  go to state 38


state 29

    4 DeclarationsAux: DeclarationsAux VarDeclaration SEMICOLON .

    $default  reduce using rule 4 (DeclarationsAux)


state 30

    5 DeclarationsAux: DeclarationsAux FuncDeclaration SEMICOLON .

    $default  reduce using rule 5 (DeclarationsAux)


state 31

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 39


state 32

   13 VarSpecAux: COMMA ID .

    $default  reduce using rule 13 (VarSpecAux)


state 33

   12 VarSpecAux: VarSpecAux COMMA . ID

    ID  shift, and go to state 40


state 34

   11 VarSpec: ID VarSpecAux Type .

    $default  reduce using rule 11 (VarSpec)


state 35

   18 FuncDeclaration: FUNC ID LPAR RPAR . FuncBody
   21                | FUNC ID LPAR RPAR . Type FuncBody

    LBRACE   shift, and go to state 41
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    Type      go to state 42
    FuncBody  go to state 43


state 36

   24 ParametersAux: ID . Type

    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    Type  go to state 44


state 37

   19 FuncDeclaration: FUNC ID LPAR Parameters . RPAR Type FuncBody
   20                | FUNC ID LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 45


state 38

   22 Parameters: ParametersAux .
   23 ParametersAux: ParametersAux . COMMA ID Type

    COMMA  shift, and go to state 46

    $default  reduce using rule 22 (Parameters)


state 39

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 9 (VarDeclaration)


state 40

   12 VarSpecAux: VarSpecAux COMMA ID .

    $default  reduce using rule 12 (VarSpecAux)


state 41

   25 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 29 (VarsAndStatements)

    VarsAndStatements  go to state 47


state 42

   21 FuncDeclaration: FUNC ID LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 41

    FuncBody  go to state 48


state 43

   18 FuncDeclaration: FUNC ID LPAR RPAR FuncBody .

    $default  reduce using rule 18 (FuncDeclaration)


state 44

   24 ParametersAux: ID Type .

    $default  reduce using rule 24 (ParametersAux)


state 45

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR . Type FuncBody
   20                | FUNC ID LPAR Parameters RPAR . FuncBody

    LBRACE   shift, and go to state 41
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    Type      go to state 49
    FuncBody  go to state 50


state 46

   23 ParametersAux: ParametersAux COMMA . ID Type

    ID  shift, and go to state 51


state 47

   25 FuncBody: LBRACE VarsAndStatements . RBRACE
   26 VarsAndStatements: VarsAndStatements . SEMICOLON
   27                  | VarsAndStatements . VarDeclaration SEMICOLON
   28                  | VarsAndStatements . Statement SEMICOLON

    error      shift, and go to state 52
    SEMICOLON  shift, and go to state 53
    RETURN     shift, and go to state 54
    LBRACE     shift, and go to state 55
    RBRACE     shift, and go to state 56
    FOR        shift, and go to state 57
    IF         shift, and go to state 58
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 59
    ID         shift, and go to state 60

    VarDeclaration  go to state 61
    Statement       go to state 62
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 48

   21 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody .

    $default  reduce using rule 21 (FuncDeclaration)


state 49

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 41

    FuncBody  go to state 65


state 50

   20 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 20 (FuncDeclaration)


state 51

   23 ParametersAux: ParametersAux COMMA ID . Type

    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    Type  go to state 66


state 52

   48 Statement: error .

    $default  reduce using rule 48 (Statement)


state 53

   26 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 26 (VarsAndStatements)


state 54

   43 Statement: RETURN .
   44          | RETURN . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    $default  reduce using rule 43 (Statement)

    FuncInvocation  go to state 74
    Expr            go to state 75


state 55

   31 Statement: LBRACE . RBRACE
   32          | LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 76
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 78
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 56

   25 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 25 (FuncBody)


state 57

   39 Statement: FOR . LBRACE RBRACE
   40          | FOR . Expr LBRACE RBRACE
   41          | FOR . Expr LBRACE StatementSEMICOLON RBRACE
   42          | FOR . LBRACE StatementSEMICOLON RBRACE

    LBRACE   shift, and go to state 79
    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 80


state 58

   33 Statement: IF . Expr LBRACE RBRACE
   34          | IF . Expr LBRACE StatementSEMICOLON RBRACE
   35          | IF . Expr LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF . Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF . Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF . Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 81


state 59

   47 Statement: PRINT . LPAR StatementExprSTRLIT RPAR

    LPAR  shift, and go to state 82


state 60

   30 Statement: ID . ASSIGN Expr
   53 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   55 FuncInvocation: ID . LPAR error RPAR
   56               | ID . LPAR RPAR
   57               | ID . LPAR Expr RPAR
   58               | ID . LPAR Expr FuncInvocationAux RPAR

    ASSIGN  shift, and go to state 83
    COMMA   shift, and go to state 84
    LPAR    shift, and go to state 85


state 61

   27 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 86


state 62

   28 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 87


state 63

   46 Statement: ParseArgs .

    $default  reduce using rule 46 (Statement)


state 64

   45 Statement: FuncInvocation .

    $default  reduce using rule 45 (Statement)


state 65

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 19 (FuncDeclaration)


state 66

   23 ParametersAux: ParametersAux COMMA ID Type .

    $default  reduce using rule 23 (ParametersAux)


state 67

   65 Expr: LPAR . Expr RPAR
   82     | LPAR . error RPAR

    error    shift, and go to state 88
    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 89


state 68

   67 Expr: MINUS . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 90


state 69

   66 Expr: NOT . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 91


state 70

   68 Expr: PLUS . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 92


state 71

   61 Expr: INTLIT .

    $default  reduce using rule 61 (Expr)


state 72

   62 Expr: REALLIT .

    $default  reduce using rule 62 (Expr)


state 73

   55 FuncInvocation: ID . LPAR error RPAR
   56               | ID . LPAR RPAR
   57               | ID . LPAR Expr RPAR
   58               | ID . LPAR Expr FuncInvocationAux RPAR
   63 Expr: ID .

    LPAR  shift, and go to state 85

    $default  reduce using rule 63 (Expr)


state 74

   64 Expr: FuncInvocation .

    $default  reduce using rule 64 (Expr)


state 75

   44 Statement: RETURN Expr .
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105

    $default  reduce using rule 44 (Statement)


state 76

   31 Statement: LBRACE RBRACE .

    $default  reduce using rule 31 (Statement)


state 77

   50 StatementSEMICOLON: Statement . SEMICOLON

    SEMICOLON  shift, and go to state 106


state 78

   32 Statement: LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 107
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 79

   39 Statement: FOR LBRACE . RBRACE
   42          | FOR LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 109
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 110
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 80

   40 Statement: FOR Expr . LBRACE RBRACE
   41          | FOR Expr . LBRACE StatementSEMICOLON RBRACE
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND     shift, and go to state 93
    STAR    shift, and go to state 94
    DIV     shift, and go to state 95
    EQ      shift, and go to state 96
    GE      shift, and go to state 97
    GT      shift, and go to state 98
    LBRACE  shift, and go to state 111
    LE      shift, and go to state 99
    LT      shift, and go to state 100
    MINUS   shift, and go to state 101
    MOD     shift, and go to state 102
    NE      shift, and go to state 103
    OR      shift, and go to state 104
    PLUS    shift, and go to state 105


state 81

   33 Statement: IF Expr . LBRACE RBRACE
   34          | IF Expr . LBRACE StatementSEMICOLON RBRACE
   35          | IF Expr . LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF Expr . LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr . LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr . LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND     shift, and go to state 93
    STAR    shift, and go to state 94
    DIV     shift, and go to state 95
    EQ      shift, and go to state 96
    GE      shift, and go to state 97
    GT      shift, and go to state 98
    LBRACE  shift, and go to state 112
    LE      shift, and go to state 99
    LT      shift, and go to state 100
    MINUS   shift, and go to state 101
    MOD     shift, and go to state 102
    NE      shift, and go to state 103
    OR      shift, and go to state 104
    PLUS    shift, and go to state 105


state 82

   47 Statement: PRINT LPAR . StatementExprSTRLIT RPAR

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    STRLIT   shift, and go to state 113
    ID       shift, and go to state 73

    StatementExprSTRLIT  go to state 114
    FuncInvocation       go to state 74
    Expr                 go to state 115


state 83

   30 Statement: ID ASSIGN . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 116


state 84

   53 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 117


state 85

   55 FuncInvocation: ID LPAR . error RPAR
   56               | ID LPAR . RPAR
   57               | ID LPAR . Expr RPAR
   58               | ID LPAR . Expr FuncInvocationAux RPAR

    error    shift, and go to state 118
    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    RPAR     shift, and go to state 119
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 120


state 86

   27 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 27 (VarsAndStatements)


state 87

   28 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 28 (VarsAndStatements)


state 88

   82 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 121


state 89

   65 Expr: LPAR Expr . RPAR
   69     | Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105
    RPAR   shift, and go to state 122


state 90

   67 Expr: MINUS Expr .
   69     | Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 102

    $default  reduce using rule 67 (Expr)


state 91

   66 Expr: NOT Expr .
   69     | Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    $default  reduce using rule 66 (Expr)


state 92

   68 Expr: PLUS Expr .
   69     | Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 102

    $default  reduce using rule 68 (Expr)


state 93

   70 Expr: Expr AND . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 123


state 94

   79 Expr: Expr STAR . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 124


state 95

   80 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 125


state 96

   73 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 126


state 97

   76 Expr: Expr GE . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 127


state 98

   72 Expr: Expr GT . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 128


state 99

   75 Expr: Expr LE . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 129


state 100

   71 Expr: Expr LT . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 130


state 101

   78 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 131


state 102

   81 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 132


state 103

   74 Expr: Expr NE . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 133


state 104

   69 Expr: Expr OR . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 134


state 105

   77 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 135


state 106

   50 StatementSEMICOLON: Statement SEMICOLON .

    $default  reduce using rule 50 (StatementSEMICOLON)


state 107

   32 Statement: LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 32 (Statement)


state 108

   49 StatementSEMICOLON: StatementSEMICOLON Statement . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 109

   39 Statement: FOR LBRACE RBRACE .

    $default  reduce using rule 39 (Statement)


state 110

   42 Statement: FOR LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 137
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 111

   40 Statement: FOR Expr LBRACE . RBRACE
   41          | FOR Expr LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 138
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 139
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 112

   33 Statement: IF Expr LBRACE . RBRACE
   34          | IF Expr LBRACE . StatementSEMICOLON RBRACE
   35          | IF Expr LBRACE . RBRACE ELSE LBRACE RBRACE
   36          | IF Expr LBRACE . RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr LBRACE . StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE . StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 140
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 141
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 113

   52 StatementExprSTRLIT: STRLIT .

    $default  reduce using rule 52 (StatementExprSTRLIT)


state 114

   47 Statement: PRINT LPAR StatementExprSTRLIT . RPAR

    RPAR  shift, and go to state 142


state 115

   51 StatementExprSTRLIT: Expr .
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105

    $default  reduce using rule 51 (StatementExprSTRLIT)


state 116

   30 Statement: ID ASSIGN Expr .
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105

    $default  reduce using rule 30 (Statement)


state 117

   53 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 143


state 118

   55 FuncInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 144


state 119

   56 FuncInvocation: ID LPAR RPAR .

    $default  reduce using rule 56 (FuncInvocation)


state 120

   57 FuncInvocation: ID LPAR Expr . RPAR
   58               | ID LPAR Expr . FuncInvocationAux RPAR
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    COMMA  shift, and go to state 145
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105
    RPAR   shift, and go to state 146

    FuncInvocationAux  go to state 147


state 121

   82 Expr: LPAR error RPAR .

    $default  reduce using rule 82 (Expr)


state 122

   65 Expr: LPAR Expr RPAR .

    $default  reduce using rule 65 (Expr)


state 123

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   70     | Expr AND Expr .
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    PLUS   shift, and go to state 105

    $default  reduce using rule 70 (Expr)


state 124

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   79     | Expr STAR Expr .
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    $default  reduce using rule 79 (Expr)


state 125

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   80     | Expr DIV Expr .
   81     | Expr . MOD Expr

    $default  reduce using rule 80 (Expr)


state 126

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   73     | Expr EQ Expr .
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 73 (Expr)


state 127

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   76     | Expr GE Expr .
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 76 (Expr)


state 128

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   72     | Expr GT Expr .
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 72 (Expr)


state 129

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   75     | Expr LE Expr .
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 75 (Expr)


state 130

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   71     | Expr LT Expr .
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 71 (Expr)


state 131

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   78     | Expr MINUS Expr .
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 102

    $default  reduce using rule 78 (Expr)


state 132

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr
   81     | Expr MOD Expr .

    $default  reduce using rule 81 (Expr)


state 133

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   74     | Expr NE Expr .
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    PLUS   shift, and go to state 105

    $default  reduce using rule 74 (Expr)


state 134

   69 Expr: Expr . OR Expr
   69     | Expr OR Expr .
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    PLUS   shift, and go to state 105

    $default  reduce using rule 69 (Expr)


state 135

   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   77     | Expr PLUS Expr .
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    STAR  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 102

    $default  reduce using rule 77 (Expr)


state 136

   49 StatementSEMICOLON: StatementSEMICOLON Statement SEMICOLON .

    $default  reduce using rule 49 (StatementSEMICOLON)


state 137

   42 Statement: FOR LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 42 (Statement)


state 138

   40 Statement: FOR Expr LBRACE RBRACE .

    $default  reduce using rule 40 (Statement)


state 139

   41 Statement: FOR Expr LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 148
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 140

   33 Statement: IF Expr LBRACE RBRACE .
   35          | IF Expr LBRACE RBRACE . ELSE LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE . ELSE LBRACE StatementSEMICOLON RBRACE

    ELSE  shift, and go to state 149

    $default  reduce using rule 33 (Statement)


state 141

   34 Statement: IF Expr LBRACE StatementSEMICOLON . RBRACE
   37          | IF Expr LBRACE StatementSEMICOLON . RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON . RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 150
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 142

   47 Statement: PRINT LPAR StatementExprSTRLIT RPAR .

    $default  reduce using rule 47 (Statement)


state 143

   53 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 151


state 144

   55 FuncInvocation: ID LPAR error RPAR .

    $default  reduce using rule 55 (FuncInvocation)


state 145

   60 FuncInvocationAux: COMMA . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 152


state 146

   57 FuncInvocation: ID LPAR Expr RPAR .

    $default  reduce using rule 57 (FuncInvocation)


state 147

   58 FuncInvocation: ID LPAR Expr FuncInvocationAux . RPAR
   59 FuncInvocationAux: FuncInvocationAux . COMMA Expr

    COMMA  shift, and go to state 153
    RPAR   shift, and go to state 154


state 148

   41 Statement: FOR Expr LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 41 (Statement)


state 149

   35 Statement: IF Expr LBRACE RBRACE ELSE . LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE ELSE . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 155


state 150

   34 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE .
   37          | IF Expr LBRACE StatementSEMICOLON RBRACE . ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE . ELSE LBRACE StatementSEMICOLON RBRACE

    ELSE  shift, and go to state 156

    $default  reduce using rule 34 (Statement)


state 151

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 157


state 152

   60 FuncInvocationAux: COMMA Expr .
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105

    $default  reduce using rule 60 (FuncInvocationAux)


state 153

   59 FuncInvocationAux: FuncInvocationAux COMMA . Expr

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 158


state 154

   58 FuncInvocation: ID LPAR Expr FuncInvocationAux RPAR .

    $default  reduce using rule 58 (FuncInvocation)


state 155

   35 Statement: IF Expr LBRACE RBRACE ELSE LBRACE . RBRACE
   36          | IF Expr LBRACE RBRACE ELSE LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 159
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 160
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 156

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE . LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 161


state 157

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   54          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 162
    CMDARGS  shift, and go to state 163


state 158

   59 FuncInvocationAux: FuncInvocationAux COMMA Expr .
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105

    $default  reduce using rule 59 (FuncInvocationAux)


state 159

   35 Statement: IF Expr LBRACE RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 35 (Statement)


state 160

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 164
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 161

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE . RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 165
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement           go to state 77
    StatementSEMICOLON  go to state 166
    ParseArgs           go to state 63
    FuncInvocation      go to state 64


state 162

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 167


state 163

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 168


state 164

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 36 (Statement)


state 165

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 37 (Statement)


state 166

   38 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 52
    RETURN  shift, and go to state 54
    LBRACE  shift, and go to state 55
    RBRACE  shift, and go to state 169
    FOR     shift, and go to state 57
    IF      shift, and go to state 58
    PRINT   shift, and go to state 59
    ID      shift, and go to state 60

    Statement       go to state 108
    ParseArgs       go to state 63
    FuncInvocation  go to state 64


state 167

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 54 (ParseArgs)


state 168

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    LPAR     shift, and go to state 67
    MINUS    shift, and go to state 68
    NOT      shift, and go to state 69
    PLUS     shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72
    ID       shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 170


state 169

   38 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 38 (Statement)


state 170

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   69 Expr: Expr . OR Expr
   70     | Expr . AND Expr
   71     | Expr . LT Expr
   72     | Expr . GT Expr
   73     | Expr . EQ Expr
   74     | Expr . NE Expr
   75     | Expr . LE Expr
   76     | Expr . GE Expr
   77     | Expr . PLUS Expr
   78     | Expr . MINUS Expr
   79     | Expr . STAR Expr
   80     | Expr . DIV Expr
   81     | Expr . MOD Expr

    AND    shift, and go to state 93
    STAR   shift, and go to state 94
    DIV    shift, and go to state 95
    EQ     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    MOD    shift, and go to state 102
    NE     shift, and go to state 103
    OR     shift, and go to state 104
    PLUS   shift, and go to state 105
    RSQ    shift, and go to state 171


state 171

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 172


state 172

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 53 (ParseArgs)
