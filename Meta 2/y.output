Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: /* empty */
    3             | DeclarationsAux

    4 DeclarationsAux: DeclarationsAux VarDeclaration SEMICOLON
    5                | DeclarationsAux FuncDeclaration SEMICOLON
    6                | VarDeclaration SEMICOLON
    7                | FuncDeclaration SEMICOLON

    8 VarDeclaration: VAR VarSpec
    9               | VAR LPAR VarSpec SEMICOLON RPAR

   10 VarSpec: IdAux Type
   11        | IdAux VarSpecAux Type

   12 VarSpecAux: VarSpecAux COMMA IdAux
   13           | COMMA IdAux

   14 Type: INT
   15     | FLOAT32
   16     | BOOL
   17     | STRING

   18 FuncDeclaration: FUNC IdAux LPAR RPAR FuncBody
   19                | FUNC IdAux LPAR Parameters RPAR Type FuncBody
   20                | FUNC IdAux LPAR Parameters RPAR FuncBody
   21                | FUNC IdAux LPAR RPAR Type FuncBody

   22 Parameters: ParametersAux

   23 ParametersAux: ParametersAux COMMA IdAux Type
   24              | IdAux Type

   25 FuncBody: LBRACE VarsAndStatements RBRACE

   26 VarsAndStatements: VarsAndStatements SEMICOLON
   27                  | VarsAndStatements VarDeclaration SEMICOLON
   28                  | VarsAndStatements Statement SEMICOLON
   29                  | /* empty */

   30 Statement: IdAux ASSIGN Expr
   31          | LBRACE RBRACE
   32          | LBRACE StatementSEMICOLON RBRACE
   33          | IF Expr LBRACE RBRACE
   34          | IF Expr LBRACE StatementSEMICOLON RBRACE
   35          | IF Expr LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   39          | FOR LBRACE RBRACE
   40          | FOR Expr LBRACE RBRACE
   41          | FOR Expr LBRACE StatementSEMICOLON RBRACE
   42          | FOR LBRACE StatementSEMICOLON RBRACE
   43          | RETURN
   44          | RETURN Expr
   45          | FuncInvocation
   46          | ParseArgs
   47          | PRINT LPAR StatementExprSTRLIT RPAR
   48          | error

   49 StatementSEMICOLON: StatementSEMICOLON Statement SEMICOLON
   50                   | Statement SEMICOLON

   51 StatementExprSTRLIT: Expr
   52                    | STRLIT

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   55 FuncInvocation: IdAux LPAR error RPAR
   56               | IdAux LPAR RPAR
   57               | IdAux LPAR Expr RPAR
   58               | IdAux LPAR Expr FuncInvocationAux RPAR

   59 FuncInvocationAux: FuncInvocationAux COMMA Expr
   60                  | COMMA Expr

   61 IdAux: ID

   62 Expr: INTLIT
   63     | REALLIT
   64     | IdAux
   65     | FuncInvocation
   66     | LPAR Expr RPAR
   67     | NOT Expr
   68     | MINUS Expr
   69     | PLUS Expr
   70     | Expr OR Expr
   71     | Expr AND Expr
   72     | Expr LT Expr
   73     | Expr GT Expr
   74     | Expr EQ Expr
   75     | Expr NE Expr
   76     | Expr LE Expr
   77     | Expr GE Expr
   78     | Expr PLUS Expr
   79     | Expr MINUS Expr
   80     | Expr STAR Expr
   81     | Expr DIV Expr
   82     | Expr MOD Expr
   83     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 48 54 55 83
SEMICOLON (258) 1 4 5 6 7 9 26 27 28 49 50
BLANKID (259) 53 54
PACKAGE (260) 1
RETURN (261) 43 44
AND (262) 71
ASSIGN (263) 30 53 54
STAR (264) 80
COMMA (265) 12 13 23 53 54 59 60
DIV (266) 81
EQ (267) 74
GE (268) 77
GT (269) 73
LBRACE (270) 25 31 32 33 34 35 36 37 38 39 40 41 42
LE (271) 76
LPAR (272) 9 18 19 20 21 47 53 54 55 56 57 58 66 83
LSQ (273) 53
LT (274) 72
MINUS (275) 68 79
MOD (276) 82
NE (277) 75
NOT (278) 67
OR (279) 70
PLUS (280) 69 78
RBRACE (281) 25 31 32 33 34 35 36 37 38 39 40 41 42
RPAR (282) 9 18 19 20 21 47 53 54 55 56 57 58 66 83
RSQ (283) 53
ELSE (284) 35 36 37 38
FOR (285) 39 40 41 42
IF (286) 33 34 35 36 37 38
VAR (287) 8 9
INT (288) 14
FLOAT32 (289) 15
BOOL (290) 16
STRING (291) 17
PARSEINT (292) 53 54
FUNC (293) 18 19 20 21
CMDARGS (294) 53
PRINT (295) 47
RESERVED (296)
INTLIT (297) 62
REALLIT (298) 63
STRLIT (299) 52
ID (300) 1 61


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Declarations (48)
    on left: 2 3, on right: 1
DeclarationsAux (49)
    on left: 4 5 6 7, on right: 3 4 5
VarDeclaration (50)
    on left: 8 9, on right: 4 6 27
VarSpec (51)
    on left: 10 11, on right: 8 9
VarSpecAux (52)
    on left: 12 13, on right: 11 12
Type (53)
    on left: 14 15 16 17, on right: 10 11 19 21 23 24
FuncDeclaration (54)
    on left: 18 19 20 21, on right: 5 7
Parameters (55)
    on left: 22, on right: 19 20
ParametersAux (56)
    on left: 23 24, on right: 22 23
FuncBody (57)
    on left: 25, on right: 18 19 20 21
VarsAndStatements (58)
    on left: 26 27 28 29, on right: 25 26 27 28
Statement (59)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48, on right: 28 49 50
StatementSEMICOLON (60)
    on left: 49 50, on right: 32 34 36 37 38 41 42 49
StatementExprSTRLIT (61)
    on left: 51 52, on right: 47
ParseArgs (62)
    on left: 53 54, on right: 46
FuncInvocation (63)
    on left: 55 56 57 58, on right: 45 65
FuncInvocationAux (64)
    on left: 59 60, on right: 58 59
IdAux (65)
    on left: 61, on right: 10 11 12 13 18 19 20 21 23 24 30 53 54 55
    56 57 58 64
Expr (66)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81 82 83, on right: 30 33 34 35 36 37 38 40 41 44 51 53 57 58
    59 60 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82


state 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 2 (Declarations)

    Declarations     go to state 8
    DeclarationsAux  go to state 9
    VarDeclaration   go to state 10
    FuncDeclaration  go to state 11


state 6

    8 VarDeclaration: VAR . VarSpec
    9               | VAR . LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 12
    ID    shift, and go to state 13

    VarSpec  go to state 14
    IdAux    go to state 15


state 7

   18 FuncDeclaration: FUNC . IdAux LPAR RPAR FuncBody
   19                | FUNC . IdAux LPAR Parameters RPAR Type FuncBody
   20                | FUNC . IdAux LPAR Parameters RPAR FuncBody
   21                | FUNC . IdAux LPAR RPAR Type FuncBody

    ID  shift, and go to state 13

    IdAux  go to state 16


state 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


state 9

    3 Declarations: DeclarationsAux .
    4 DeclarationsAux: DeclarationsAux . VarDeclaration SEMICOLON
    5                | DeclarationsAux . FuncDeclaration SEMICOLON

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    VarDeclaration   go to state 17
    FuncDeclaration  go to state 18


state 10

    6 DeclarationsAux: VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 19


state 11

    7 DeclarationsAux: FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 20


state 12

    9 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 13

    VarSpec  go to state 21
    IdAux    go to state 15


state 13

   61 IdAux: ID .

    $default  reduce using rule 61 (IdAux)


state 14

    8 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 8 (VarDeclaration)


state 15

   10 VarSpec: IdAux . Type
   11        | IdAux . VarSpecAux Type

    COMMA    shift, and go to state 22
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    VarSpecAux  go to state 27
    Type        go to state 28


state 16

   18 FuncDeclaration: FUNC IdAux . LPAR RPAR FuncBody
   19                | FUNC IdAux . LPAR Parameters RPAR Type FuncBody
   20                | FUNC IdAux . LPAR Parameters RPAR FuncBody
   21                | FUNC IdAux . LPAR RPAR Type FuncBody

    LPAR  shift, and go to state 29


state 17

    4 DeclarationsAux: DeclarationsAux VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 30


state 18

    5 DeclarationsAux: DeclarationsAux FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 31


state 19

    6 DeclarationsAux: VarDeclaration SEMICOLON .

    $default  reduce using rule 6 (DeclarationsAux)


state 20

    7 DeclarationsAux: FuncDeclaration SEMICOLON .

    $default  reduce using rule 7 (DeclarationsAux)


state 21

    9 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 32


state 22

   13 VarSpecAux: COMMA . IdAux

    ID  shift, and go to state 13

    IdAux  go to state 33


state 23

   14 Type: INT .

    $default  reduce using rule 14 (Type)


state 24

   15 Type: FLOAT32 .

    $default  reduce using rule 15 (Type)


state 25

   16 Type: BOOL .

    $default  reduce using rule 16 (Type)


state 26

   17 Type: STRING .

    $default  reduce using rule 17 (Type)


state 27

   11 VarSpec: IdAux VarSpecAux . Type
   12 VarSpecAux: VarSpecAux . COMMA IdAux

    COMMA    shift, and go to state 34
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 35


state 28

   10 VarSpec: IdAux Type .

    $default  reduce using rule 10 (VarSpec)


state 29

   18 FuncDeclaration: FUNC IdAux LPAR . RPAR FuncBody
   19                | FUNC IdAux LPAR . Parameters RPAR Type FuncBody
   20                | FUNC IdAux LPAR . Parameters RPAR FuncBody
   21                | FUNC IdAux LPAR . RPAR Type FuncBody

    RPAR  shift, and go to state 36
    ID    shift, and go to state 13

    Parameters     go to state 37
    ParametersAux  go to state 38
    IdAux          go to state 39


state 30

    4 DeclarationsAux: DeclarationsAux VarDeclaration SEMICOLON .

    $default  reduce using rule 4 (DeclarationsAux)


state 31

    5 DeclarationsAux: DeclarationsAux FuncDeclaration SEMICOLON .

    $default  reduce using rule 5 (DeclarationsAux)


state 32

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 40


state 33

   13 VarSpecAux: COMMA IdAux .

    $default  reduce using rule 13 (VarSpecAux)


state 34

   12 VarSpecAux: VarSpecAux COMMA . IdAux

    ID  shift, and go to state 13

    IdAux  go to state 41


state 35

   11 VarSpec: IdAux VarSpecAux Type .

    $default  reduce using rule 11 (VarSpec)


state 36

   18 FuncDeclaration: FUNC IdAux LPAR RPAR . FuncBody
   21                | FUNC IdAux LPAR RPAR . Type FuncBody

    LBRACE   shift, and go to state 42
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type      go to state 43
    FuncBody  go to state 44


state 37

   19 FuncDeclaration: FUNC IdAux LPAR Parameters . RPAR Type FuncBody
   20                | FUNC IdAux LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 45


state 38

   22 Parameters: ParametersAux .
   23 ParametersAux: ParametersAux . COMMA IdAux Type

    COMMA  shift, and go to state 46

    $default  reduce using rule 22 (Parameters)


state 39

   24 ParametersAux: IdAux . Type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 47


state 40

    9 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 9 (VarDeclaration)


state 41

   12 VarSpecAux: VarSpecAux COMMA IdAux .

    $default  reduce using rule 12 (VarSpecAux)


state 42

   25 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 29 (VarsAndStatements)

    VarsAndStatements  go to state 48


state 43

   21 FuncDeclaration: FUNC IdAux LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 42

    FuncBody  go to state 49


state 44

   18 FuncDeclaration: FUNC IdAux LPAR RPAR FuncBody .

    $default  reduce using rule 18 (FuncDeclaration)


state 45

   19 FuncDeclaration: FUNC IdAux LPAR Parameters RPAR . Type FuncBody
   20                | FUNC IdAux LPAR Parameters RPAR . FuncBody

    LBRACE   shift, and go to state 42
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type      go to state 50
    FuncBody  go to state 51


state 46

   23 ParametersAux: ParametersAux COMMA . IdAux Type

    ID  shift, and go to state 13

    IdAux  go to state 52


state 47

   24 ParametersAux: IdAux Type .

    $default  reduce using rule 24 (ParametersAux)


state 48

   25 FuncBody: LBRACE VarsAndStatements . RBRACE
   26 VarsAndStatements: VarsAndStatements . SEMICOLON
   27                  | VarsAndStatements . VarDeclaration SEMICOLON
   28                  | VarsAndStatements . Statement SEMICOLON

    error      shift, and go to state 53
    SEMICOLON  shift, and go to state 54
    RETURN     shift, and go to state 55
    LBRACE     shift, and go to state 56
    RBRACE     shift, and go to state 57
    FOR        shift, and go to state 58
    IF         shift, and go to state 59
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 60
    ID         shift, and go to state 13

    VarDeclaration  go to state 61
    Statement       go to state 62
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 49

   21 FuncDeclaration: FUNC IdAux LPAR RPAR Type FuncBody .

    $default  reduce using rule 21 (FuncDeclaration)


state 50

   19 FuncDeclaration: FUNC IdAux LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 42

    FuncBody  go to state 66


state 51

   20 FuncDeclaration: FUNC IdAux LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 20 (FuncDeclaration)


state 52

   23 ParametersAux: ParametersAux COMMA IdAux . Type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    Type  go to state 67


state 53

   48 Statement: error .

    $default  reduce using rule 48 (Statement)


state 54

   26 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 26 (VarsAndStatements)


state 55

   43 Statement: RETURN .
   44          | RETURN . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    $default  reduce using rule 43 (Statement)

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 76


state 56

   31 Statement: LBRACE . RBRACE
   32          | LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 77
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 79
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 57

   25 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 25 (FuncBody)


state 58

   39 Statement: FOR . LBRACE RBRACE
   40          | FOR . Expr LBRACE RBRACE
   41          | FOR . Expr LBRACE StatementSEMICOLON RBRACE
   42          | FOR . LBRACE StatementSEMICOLON RBRACE

    LBRACE   shift, and go to state 80
    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 81


state 59

   33 Statement: IF . Expr LBRACE RBRACE
   34          | IF . Expr LBRACE StatementSEMICOLON RBRACE
   35          | IF . Expr LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF . Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF . Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF . Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 82


state 60

   47 Statement: PRINT . LPAR StatementExprSTRLIT RPAR

    LPAR  shift, and go to state 83


state 61

   27 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 84


state 62

   28 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 85


state 63

   46 Statement: ParseArgs .

    $default  reduce using rule 46 (Statement)


state 64

   45 Statement: FuncInvocation .

    $default  reduce using rule 45 (Statement)


state 65

   30 Statement: IdAux . ASSIGN Expr
   53 ParseArgs: IdAux . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   55 FuncInvocation: IdAux . LPAR error RPAR
   56               | IdAux . LPAR RPAR
   57               | IdAux . LPAR Expr RPAR
   58               | IdAux . LPAR Expr FuncInvocationAux RPAR

    ASSIGN  shift, and go to state 86
    COMMA   shift, and go to state 87
    LPAR    shift, and go to state 88


state 66

   19 FuncDeclaration: FUNC IdAux LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 19 (FuncDeclaration)


state 67

   23 ParametersAux: ParametersAux COMMA IdAux Type .

    $default  reduce using rule 23 (ParametersAux)


state 68

   66 Expr: LPAR . Expr RPAR
   83     | LPAR . error RPAR

    error    shift, and go to state 89
    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 90


state 69

   68 Expr: MINUS . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 91


state 70

   67 Expr: NOT . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 92


state 71

   69 Expr: PLUS . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 93


state 72

   62 Expr: INTLIT .

    $default  reduce using rule 62 (Expr)


state 73

   63 Expr: REALLIT .

    $default  reduce using rule 63 (Expr)


state 74

   65 Expr: FuncInvocation .

    $default  reduce using rule 65 (Expr)


state 75

   55 FuncInvocation: IdAux . LPAR error RPAR
   56               | IdAux . LPAR RPAR
   57               | IdAux . LPAR Expr RPAR
   58               | IdAux . LPAR Expr FuncInvocationAux RPAR
   64 Expr: IdAux .

    LPAR  shift, and go to state 88

    $default  reduce using rule 64 (Expr)


state 76

   44 Statement: RETURN Expr .
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106

    $default  reduce using rule 44 (Statement)


state 77

   31 Statement: LBRACE RBRACE .

    $default  reduce using rule 31 (Statement)


state 78

   50 StatementSEMICOLON: Statement . SEMICOLON

    SEMICOLON  shift, and go to state 107


state 79

   32 Statement: LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 108
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 80

   39 Statement: FOR LBRACE . RBRACE
   42          | FOR LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 110
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 111
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 81

   40 Statement: FOR Expr . LBRACE RBRACE
   41          | FOR Expr . LBRACE StatementSEMICOLON RBRACE
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND     shift, and go to state 94
    STAR    shift, and go to state 95
    DIV     shift, and go to state 96
    EQ      shift, and go to state 97
    GE      shift, and go to state 98
    GT      shift, and go to state 99
    LBRACE  shift, and go to state 112
    LE      shift, and go to state 100
    LT      shift, and go to state 101
    MINUS   shift, and go to state 102
    MOD     shift, and go to state 103
    NE      shift, and go to state 104
    OR      shift, and go to state 105
    PLUS    shift, and go to state 106


state 82

   33 Statement: IF Expr . LBRACE RBRACE
   34          | IF Expr . LBRACE StatementSEMICOLON RBRACE
   35          | IF Expr . LBRACE RBRACE ELSE LBRACE RBRACE
   36          | IF Expr . LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr . LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr . LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND     shift, and go to state 94
    STAR    shift, and go to state 95
    DIV     shift, and go to state 96
    EQ      shift, and go to state 97
    GE      shift, and go to state 98
    GT      shift, and go to state 99
    LBRACE  shift, and go to state 113
    LE      shift, and go to state 100
    LT      shift, and go to state 101
    MINUS   shift, and go to state 102
    MOD     shift, and go to state 103
    NE      shift, and go to state 104
    OR      shift, and go to state 105
    PLUS    shift, and go to state 106


state 83

   47 Statement: PRINT LPAR . StatementExprSTRLIT RPAR

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    STRLIT   shift, and go to state 114
    ID       shift, and go to state 13

    StatementExprSTRLIT  go to state 115
    FuncInvocation       go to state 74
    IdAux                go to state 75
    Expr                 go to state 116


state 84

   27 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 27 (VarsAndStatements)


state 85

   28 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 28 (VarsAndStatements)


state 86

   30 Statement: IdAux ASSIGN . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 117


state 87

   53 ParseArgs: IdAux COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 118


state 88

   55 FuncInvocation: IdAux LPAR . error RPAR
   56               | IdAux LPAR . RPAR
   57               | IdAux LPAR . Expr RPAR
   58               | IdAux LPAR . Expr FuncInvocationAux RPAR

    error    shift, and go to state 119
    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    RPAR     shift, and go to state 120
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 121


state 89

   83 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 122


state 90

   66 Expr: LPAR Expr . RPAR
   70     | Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106
    RPAR   shift, and go to state 123


state 91

   68 Expr: MINUS Expr .
   70     | Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 103

    $default  reduce using rule 68 (Expr)


state 92

   67 Expr: NOT Expr .
   70     | Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    $default  reduce using rule 67 (Expr)


state 93

   69 Expr: PLUS Expr .
   70     | Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 103

    $default  reduce using rule 69 (Expr)


state 94

   71 Expr: Expr AND . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 124


state 95

   80 Expr: Expr STAR . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 125


state 96

   81 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 126


state 97

   74 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 127


state 98

   77 Expr: Expr GE . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 128


state 99

   73 Expr: Expr GT . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 129


state 100

   76 Expr: Expr LE . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 130


state 101

   72 Expr: Expr LT . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 131


state 102

   79 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 132


state 103

   82 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 133


state 104

   75 Expr: Expr NE . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 134


state 105

   70 Expr: Expr OR . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 135


state 106

   78 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 136


state 107

   50 StatementSEMICOLON: Statement SEMICOLON .

    $default  reduce using rule 50 (StatementSEMICOLON)


state 108

   32 Statement: LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 32 (Statement)


state 109

   49 StatementSEMICOLON: StatementSEMICOLON Statement . SEMICOLON

    SEMICOLON  shift, and go to state 137


state 110

   39 Statement: FOR LBRACE RBRACE .

    $default  reduce using rule 39 (Statement)


state 111

   42 Statement: FOR LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 138
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 112

   40 Statement: FOR Expr LBRACE . RBRACE
   41          | FOR Expr LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 139
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 140
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 113

   33 Statement: IF Expr LBRACE . RBRACE
   34          | IF Expr LBRACE . StatementSEMICOLON RBRACE
   35          | IF Expr LBRACE . RBRACE ELSE LBRACE RBRACE
   36          | IF Expr LBRACE . RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   37          | IF Expr LBRACE . StatementSEMICOLON RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE . StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 141
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 142
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 114

   52 StatementExprSTRLIT: STRLIT .

    $default  reduce using rule 52 (StatementExprSTRLIT)


state 115

   47 Statement: PRINT LPAR StatementExprSTRLIT . RPAR

    RPAR  shift, and go to state 143


state 116

   51 StatementExprSTRLIT: Expr .
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106

    $default  reduce using rule 51 (StatementExprSTRLIT)


state 117

   30 Statement: IdAux ASSIGN Expr .
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106

    $default  reduce using rule 30 (Statement)


state 118

   53 ParseArgs: IdAux COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 144


state 119

   55 FuncInvocation: IdAux LPAR error . RPAR

    RPAR  shift, and go to state 145


state 120

   56 FuncInvocation: IdAux LPAR RPAR .

    $default  reduce using rule 56 (FuncInvocation)


state 121

   57 FuncInvocation: IdAux LPAR Expr . RPAR
   58               | IdAux LPAR Expr . FuncInvocationAux RPAR
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    COMMA  shift, and go to state 146
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106
    RPAR   shift, and go to state 147

    FuncInvocationAux  go to state 148


state 122

   83 Expr: LPAR error RPAR .

    $default  reduce using rule 83 (Expr)


state 123

   66 Expr: LPAR Expr RPAR .

    $default  reduce using rule 66 (Expr)


state 124

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   71     | Expr AND Expr .
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    PLUS   shift, and go to state 106

    $default  reduce using rule 71 (Expr)


state 125

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   80     | Expr STAR Expr .
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    $default  reduce using rule 80 (Expr)


state 126

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   81     | Expr DIV Expr .
   82     | Expr . MOD Expr

    $default  reduce using rule 81 (Expr)


state 127

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   74     | Expr EQ Expr .
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 74 (Expr)


state 128

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   77     | Expr GE Expr .
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 77 (Expr)


state 129

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   73     | Expr GT Expr .
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 73 (Expr)


state 130

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   76     | Expr LE Expr .
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 76 (Expr)


state 131

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   72     | Expr LT Expr .
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 72 (Expr)


state 132

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   79     | Expr MINUS Expr .
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 103

    $default  reduce using rule 79 (Expr)


state 133

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr
   82     | Expr MOD Expr .

    $default  reduce using rule 82 (Expr)


state 134

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   75     | Expr NE Expr .
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    PLUS   shift, and go to state 106

    $default  reduce using rule 75 (Expr)


state 135

   70 Expr: Expr . OR Expr
   70     | Expr OR Expr .
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    PLUS   shift, and go to state 106

    $default  reduce using rule 70 (Expr)


state 136

   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   78     | Expr PLUS Expr .
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    STAR  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 103

    $default  reduce using rule 78 (Expr)


state 137

   49 StatementSEMICOLON: StatementSEMICOLON Statement SEMICOLON .

    $default  reduce using rule 49 (StatementSEMICOLON)


state 138

   42 Statement: FOR LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 42 (Statement)


state 139

   40 Statement: FOR Expr LBRACE RBRACE .

    $default  reduce using rule 40 (Statement)


state 140

   41 Statement: FOR Expr LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 149
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 141

   33 Statement: IF Expr LBRACE RBRACE .
   35          | IF Expr LBRACE RBRACE . ELSE LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE . ELSE LBRACE StatementSEMICOLON RBRACE

    ELSE  shift, and go to state 150

    $default  reduce using rule 33 (Statement)


state 142

   34 Statement: IF Expr LBRACE StatementSEMICOLON . RBRACE
   37          | IF Expr LBRACE StatementSEMICOLON . RBRACE ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON . RBRACE ELSE LBRACE StatementSEMICOLON RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 151
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 143

   47 Statement: PRINT LPAR StatementExprSTRLIT RPAR .

    $default  reduce using rule 47 (Statement)


state 144

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 152


state 145

   55 FuncInvocation: IdAux LPAR error RPAR .

    $default  reduce using rule 55 (FuncInvocation)


state 146

   60 FuncInvocationAux: COMMA . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 153


state 147

   57 FuncInvocation: IdAux LPAR Expr RPAR .

    $default  reduce using rule 57 (FuncInvocation)


state 148

   58 FuncInvocation: IdAux LPAR Expr FuncInvocationAux . RPAR
   59 FuncInvocationAux: FuncInvocationAux . COMMA Expr

    COMMA  shift, and go to state 154
    RPAR   shift, and go to state 155


state 149

   41 Statement: FOR Expr LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 41 (Statement)


state 150

   35 Statement: IF Expr LBRACE RBRACE ELSE . LBRACE RBRACE
   36          | IF Expr LBRACE RBRACE ELSE . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 156


state 151

   34 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE .
   37          | IF Expr LBRACE StatementSEMICOLON RBRACE . ELSE LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE . ELSE LBRACE StatementSEMICOLON RBRACE

    ELSE  shift, and go to state 157

    $default  reduce using rule 34 (Statement)


state 152

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 158


state 153

   60 FuncInvocationAux: COMMA Expr .
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106

    $default  reduce using rule 60 (FuncInvocationAux)


state 154

   59 FuncInvocationAux: FuncInvocationAux COMMA . Expr

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 159


state 155

   58 FuncInvocation: IdAux LPAR Expr FuncInvocationAux RPAR .

    $default  reduce using rule 58 (FuncInvocation)


state 156

   35 Statement: IF Expr LBRACE RBRACE ELSE LBRACE . RBRACE
   36          | IF Expr LBRACE RBRACE ELSE LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 160
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 161
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 157

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE . LBRACE RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 162


state 158

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   54          | IdAux COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 163
    CMDARGS  shift, and go to state 164


state 159

   59 FuncInvocationAux: FuncInvocationAux COMMA Expr .
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106

    $default  reduce using rule 59 (FuncInvocationAux)


state 160

   35 Statement: IF Expr LBRACE RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 35 (Statement)


state 161

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 165
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 162

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE . RBRACE
   38          | IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE . StatementSEMICOLON RBRACE

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 166
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement           go to state 78
    StatementSEMICOLON  go to state 167
    ParseArgs           go to state 63
    FuncInvocation      go to state 64
    IdAux               go to state 65


state 163

   54 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 168


state 164

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 169


state 165

   36 Statement: IF Expr LBRACE RBRACE ELSE LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 36 (Statement)


state 166

   37 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 37 (Statement)


state 167

   38 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON . RBRACE
   49 StatementSEMICOLON: StatementSEMICOLON . Statement SEMICOLON

    error   shift, and go to state 53
    RETURN  shift, and go to state 55
    LBRACE  shift, and go to state 56
    RBRACE  shift, and go to state 170
    FOR     shift, and go to state 58
    IF      shift, and go to state 59
    PRINT   shift, and go to state 60
    ID      shift, and go to state 13

    Statement       go to state 109
    ParseArgs       go to state 63
    FuncInvocation  go to state 64
    IdAux           go to state 65


state 168

   54 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 54 (ParseArgs)


state 169

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    LPAR     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    PLUS     shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73
    ID       shift, and go to state 13

    FuncInvocation  go to state 74
    IdAux           go to state 75
    Expr            go to state 171


state 170

   38 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ELSE LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 38 (Statement)


state 171

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   70 Expr: Expr . OR Expr
   71     | Expr . AND Expr
   72     | Expr . LT Expr
   73     | Expr . GT Expr
   74     | Expr . EQ Expr
   75     | Expr . NE Expr
   76     | Expr . LE Expr
   77     | Expr . GE Expr
   78     | Expr . PLUS Expr
   79     | Expr . MINUS Expr
   80     | Expr . STAR Expr
   81     | Expr . DIV Expr
   82     | Expr . MOD Expr

    AND    shift, and go to state 94
    STAR   shift, and go to state 95
    DIV    shift, and go to state 96
    EQ     shift, and go to state 97
    GE     shift, and go to state 98
    GT     shift, and go to state 99
    LE     shift, and go to state 100
    LT     shift, and go to state 101
    MINUS  shift, and go to state 102
    MOD    shift, and go to state 103
    NE     shift, and go to state 104
    OR     shift, and go to state 105
    PLUS   shift, and go to state 106
    RSQ    shift, and go to state 172


state 172

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 173


state 173

   53 ParseArgs: IdAux COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 53 (ParseArgs)
